/**
 * Generates G-code from a list of tool operations.
 * @param {Array<Array<{x: number, y: number, z: number}>>} toolpaths - Array of tool operations, each is an array of points.
 * @param {Object} [options] - Optional G-code settings.
 * @returns {string} G-code as a string.
 */
function generate_gcode(toolpaths, options = {}) {
  // toolpaths: array of arrays of points
  // Assumes all coordinates are in mm, Z is up, safe height is 5mm above start Z
  const lines = [];
  lines.push('; Generated by nerd-cnc');
  lines.push('G21 ; Set units to mm');
  lines.push('G90 ; Absolute positioning');
  lines.push('G1 F1000 ; Set default feedrate');

  for (const op of toolpaths) {
    if (!op || op.length === 0) continue;
    const start = op[0];
    const safe_z = options.safe_z? options.safe_z: start.z + 5;
    // Retract to safe height before rapid moveA
    lines.push(`G0 Z${safe_z.toFixed(3)}`);
    // Rapid move to start XY at safe height
    lines.push(`G0 X${start.x.toFixed(3)} Y${start.y.toFixed(3)}`);
    // Plunge to start Z
    lines.push(`G1 Z${start.z.toFixed(3)}`);
    // Cut path for this operation
    for (const pt of op) {
      lines.push(`G1 X${pt.x.toFixed(3)} Y${pt.y.toFixed(3)} Z${pt.z.toFixed(3)}`);
    }
    // Retract to safe height at end of operation
    lines.push(`G0 Z${safe_z.toFixed(3)}`);
  }

  lines.push('M2 ; End of program');
  return lines.join('\n');
}

module.exports = { generate_gcode };
 